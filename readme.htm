<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0058)http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup -->
<HTML xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>101Wiki: Technical Note For Kup</TITLE>
<META http-equiv=Content-Type content="text/html; charset=ks_c_5601-1987">
<META content=NOINDEX,NOFOLLOW name=ROBOTS><LINK href="readme.files/default.css" 
type=text/css rel=stylesheet>
<META content="MSHTML 6.00.2745.2800" name=GENERATOR></HEAD>
<BODY>
<SCRIPT language=JavaScript type=text/javascript>
<!--
url_prefix="/wiki/wiki.php";
FrontPage="/FrontPage";
//-->
</SCRIPT>

<SCRIPT src="readme.files/kbd.js" type=text/javascript>
</SCRIPT>

<HR class=wikiHr>

<DIV id=wikiBody>
<DIV id=wikiContent>
<DIV><B>고려대 자연어처리연구실 구구조 구문분석기(<A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>) 기술문서 
(Technical Note For <A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A> Of 
KUNLP)</B> </DIV><BR>
<DIV></DIV>
<TABLE class=closure>
  <TBODY>
  <TR class=closure>
    <TD class=closure>
      <DIV>
      <DIV class=toc><A id=toc name=toc>
      <DL>
        <DD>
        <DL>
          <DT><A id=toc-1 name=toc-1><A 
          href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-1">1</A> 
          본 문서에 대하여 
          <DT><A id=toc-2 name=toc-2><A 
          href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-2">2</A> 
          개요 
          <DD>
          <DL>
            <DT><A id=toc-2.1 name=toc-2.1><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-2.1">2.1</A> 
            특징 
            <DT><A id=toc-2.2 name=toc-2.2><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-2.2">2.2</A> 
            지원 컴파일러 
            <DT><A id=toc-2.3 name=toc-2.3><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-2.3">2.3</A> 
            라이센스 </DT></DL>
          <DT><A id=toc-3 name=toc-3><A 
          href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-3">3</A> 
          설치 방법 
          <DD>
          <DL>
            <DT><A id=toc-3.1 name=toc-3.1><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-3.1">3.1</A> 
            점검사항 </DT></DL>
          <DT><A id=toc-4 name=toc-4><A 
          href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-4">4</A> 
          명령행 프로그램 사용하기 
          <DD>
          <DL>
            <DT><A id=toc-4.1 name=toc-4.1><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-4.1">4.1</A> 
            kup 프로그램 </DT></DL>
          <DT><A id=toc-5 name=toc-5><A 
          href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5">5</A> 
          프로그램적으로 사용하기 
          <DD>
          <DL>
            <DT><A id=toc-5.1 name=toc-5.1><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.1">5.1</A> 
            개요 
            <DT><A id=toc-5.2 name=toc-5.2><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.2">5.2</A> 
            준비 
            <DT><A id=toc-5.3 name=toc-5.3><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.3">5.3</A> 
            구문분석기 객체 생성하기 
            <DT><A id=toc-5.4 name=toc-5.4><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.4">5.4</A> 
            구문분석 수행하기 
            <DT><A id=toc-5.5 name=toc-5.5><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.5">5.5</A> 
            구문분석 결과 사용하기 
            <DD>
            <DL>
              <DT><A id=toc-5.5.1 name=toc-5.5.1><A 
              href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.5.1">5.5.1</A> 
              표준출력(stdout/cout)에 및 파일에 출력하기 
              <DT><A id=toc-5.5.2 name=toc-5.5.2><A 
              href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.5.2">5.5.2</A> 
              구문 트리 횡단하기 </DT></DL>
            <DT><A id=toc-5.6 name=toc-5.6><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.6">5.6</A> 
            에러 처리 
            <DT><A id=toc-5.7 name=toc-5.7><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.7">5.7</A> 
            예제 </DT></DL>
          <DT><A id=toc-6 name=toc-6><A 
          href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-6">6</A> 
          <A href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A> 
          언어학적 자료 
          <DD>
          <DL>
            <DT><A id=toc-6.1 name=toc-6.1><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-6.1">6.1</A> 
            이진트리란? 
            <DT><A id=toc-6.2 name=toc-6.2><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-6.2">6.2</A> 
            파싱 모델에 대해서 
            <DT><A id=toc-6.3 name=toc-6.3><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-6.3">6.3</A> 
            구문 노드 기호 명세 
            <DT><A id=toc-6.4 name=toc-6.4><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-6.4">6.4</A> 
            품사집합 명세 </DT></DL>
          <DT><A id=toc-7 name=toc-7><A 
          href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7">7</A> 
          API 레퍼런스 
          <DD>
          <DL>
            <DT><A id=toc-7.1 name=toc-7.1><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7.1">7.1</A> 
            ku_parser 네임스페이스 
            <DD>
            <DL>
              <DT><A id=toc-7.1.1 name=toc-7.1.1><A 
              href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7.1.1">7.1.1</A> 
              ku_parser::Kup 클래스 
              <DT><A id=toc-7.1.2 name=toc-7.1.2><A 
              href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7.1.2">7.1.2</A> 
              ku_parser::<A class=nonexistent 
              href="http://www.kwak101.pe.kr/wiki/wiki.php/KupTrOut">?</A>KupTrOut 
              클래스 
              <DT><A id=toc-7.1.3 name=toc-7.1.3><A 
              href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7.1.3">7.1.3</A> 
              ku_parser::<A class=nonexistent 
              href="http://www.kwak101.pe.kr/wiki/wiki.php/KupError">?</A>KupError 
              클래스 </DT></DL>
            <DT><A id=toc-7.2 name=toc-7.2><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7.2">7.2</A> 
            전역 네임스페이스 </DT></DL>
          <DT><A id=toc-8 name=toc-8><A 
          href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-8">8</A> 
          문제발생 시의 점검사항 
          <DD>
          <DL>
            <DT><A id=toc-8.1 name=toc-8.1><A 
            href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-8.1">8.1</A> 
            자원 파일에 대하여 </DT></DL>
          <DT><A id=toc-9 name=toc-9><A 
          href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-9">9</A> 
          힘써주신 분들 
          <DT><A id=toc-10 name=toc-10><A 
          href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-10">10</A> 
          참고문헌 </DT></DL></DD></DL></DIV></DIV></TD></TR></TBODY></TABLE>
<DIV>
<H2><A id=s-1 name=s-1></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">1</A> 본 
문서에 대하여 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-1">#</A></H2>본 
문서는 고려대학교 자연어처리 연구실(<A 
href="http://nlp.korea.ac.kr/">http://nlp.korea.ac.kr/</A>)에서 개발한 구구조 구문분석기인 <A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>를 설명한 기술 
문서이다. 이 문서를 관리할 수 있는 권한은 전적으로 고려대학교 자연어처리 연구실에 있다. 
<H2><A id=s-2 name=s-2></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">2</A> 개요 
<A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-2">#</A></H2><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>는 고려대학교 자연어처리 
연구실에서 개발한 한국어 구구조 구문분석 시스템(Korean phrase-structure parser)으로서, 명령행 프로그램 및 C++ 
프로그래밍용 툴킷<TT class=foot><A id=rfn1 name=rfn1><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#fn1">[1]</A></TT>을 
함께 제공한다. 
<H3><A id=s-2.1 name=s-2.1></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">2.1</A> 특징 
<A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-2.1">#</A></H3>현재 
버전은 다음과 같은 특징을 가지고 있다. 
<UL>
  <LI>확률적 자질기반 한국어 문법(Feature-based Probabilistic Korean Grammar) 사용 
  <LI>고려대학교 자연어처리 연구실 형태소분석기&amp;품사부착기(KOMA) 사용 
  <LI>어절 단위 처리(eojeol-wise processing) 
  <LI>이진 구구조 트리(binary phrase structure tree) 생성 
  <LI>평문텍스트/HTML 출력 기능 
  <LI>C++ API 
  <LI>명령행 프로그램: kup </LI></UL>
<H3><A id=s-2.2 name=s-2.2></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">2.2</A> 지원 
컴파일러 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-2.2">#</A></H3>본 
시스템은 호환성 및 효율을 염두에 두고 ISO/ANSI C++로 작성하였고, 다음의 운영체제/컴파일러에서 테스트하였다. 
<DIV class=indent>
<TABLE class=wiki cellSpacing=2 cellPadding=3>
  <TBODY>
  <TR class=wiki>
    <TD class=wiki>OS </TD>
    <TD class=wiki>구분 </TD>
    <TD class=wiki>컴파일러</TD></TR>
  <TR class=wiki>
    <TD class=wiki>Win32 </TD>
    <TD class=wiki></TD>
    <TD class=wiki>Microsoft Visual C++ 6/7/7.1 (built-in STL)</TD></TR>
  <TR class=wiki>
    <TD class=wiki>Win32 </TD>
    <TD class=wiki></TD>
    <TD class=wiki>Microsoft Visual C++ 6 + <A class=nonexistent 
      href="http://www.kwak101.pe.kr/wiki/wiki.php/STLport">?</A>STLport 4.5.x 
    </TD></TR>
  <TR class=wiki>
    <TD class=wiki>Win32 </TD>
    <TD class=wiki><TT class=wiki>MinGW</TT>(<A 
      href="http://www.kwak101.pe.kr/wiki/wiki.php/Dev-Cpp&raquo;&ccedil;¿&euml;¹&yacute;">DevCpp</A>) 
</TD>
    <TD class=wiki>GCC 3.2 </TD></TR>
  <TR class=wiki>
    <TD class=wiki>Win32 </TD>
    <TD class=wiki>Cygwin</TD>
    <TD class=wiki>GCC 3.2 </TD></TR>
  <TR class=wiki>
    <TD class=wiki>Unix </TD>
    <TD class=wiki>GNU/Linux</TD>
    <TD class=wiki>GCC 3.2 </TD></TR></TBODY></TABLE></DIV>
<H3><A id=s-2.3 name=s-2.3></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">2.3</A> 
라이센스 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-2.3">#</A></H3>본 
시스템의 모든 저작권 및 배포권한은 고려대학교 자연어처리 연구실에 있다.<BR>본 시스템에서 사용하는 외부 모듈인 KOMA(TM)의 모든 저작권 
및 배포권한은 고려대학교 자연어처리 연구실에 있다.<BR>(나중에, 실제 판매 및 협약에 관련된 부분은 혜겸이가 찾아서 채워 두기 바람) 
<H2><A id=s-3 name=s-3></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">3</A> 설치 
방법 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-3">#</A></H2>본 
시스템은 압축파일(.zip) 형태로 제공된다. Unix/Win32 공히, 압축을 풀면 다음과 같은 디렉토리 및 파일 구조가 나온다. 
<TABLE class=wiki cellSpacing=2 cellPadding=3>
  <TBODY>
  <TR class=wiki>
    <TD class=wiki><B>주요디렉토리</B></TD>
    <TD class=wiki><B>서브디렉토리여부</B> </TD>
    <TD class=wiki><B>설명</B> </TD></TR>
  <TR class=wiki>
    <TD class=wiki>/bin </TD>
    <TD class=wiki></TD>
    <TD class=wiki>명령행프로그램 kup가 들어 있음 </TD></TR>
  <TR class=wiki>
    <TD class=wiki>/bin/data</TD>
    <TD class=wiki>yes </TD>
    <TD class=wiki>kup 및 프로그래밍 툴킷에서 사용하기 위한 자원 파일이 들어있음 </TD></TR>
  <TR class=wiki>
    <TD class=wiki>/header_src </TD>
    <TD class=wiki></TD>
    <TD class=wiki>헤더 및 소스 파일 전부가 들어있음 </TD></TR>
  <TR class=wiki>
    <TD class=wiki>/kupLib</TD>
    <TD class=wiki></TD>
    <TD class=wiki>툴킷 라이브러리를 빌드하기 위한 프로젝트파일(.dsp,Makefile)이 들어있음</TD></TR>
  <TR class=wiki>
    <TD class=wiki>/kupTest </TD>
    <TD class=wiki></TD>
    <TD class=wiki>kup를 만드는 프로젝트 파일(.dsp,Makefile)</TD></TR>
  <TR class=wiki>
    <TD class=wiki>/lib</TD>
    <TD class=wiki></TD>
    <TD class=wiki>툴킷 라이브러리(.lib, .a)가 들어있음 </TD></TR></TBODY></TABLE>
<H3><A id=s-3.1 name=s-3.1></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">3.1</A> 
점검사항 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-3.1">#</A></H3>
<UL>
  <LI>프로젝트 파일의 경우, Win32에 대해서는 MSVC++6용 프로젝트인 .dsp만을, Unix에 대해서는 Makefile만을 
  포함하였다. 
  <LI>Win32용으로 배포되는 시스템에는 /bin 디렉토리에 형태소 분석기 모듈이 함께 포함되어 있다. 다음의 모듈이 있는지 확인할 것. 
  <UL>
    <LI><TT class=wiki>HanTag.dll</TT> 
    <LI><TT class=wiki>Koma.dll</TT> </LI></UL></LI></UL>
<H2><A id=s-4 name=s-4></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">4</A> 명령행 
프로그램 사용하기 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-4">#</A></H2>프로그램 
개발 없이 한국어 문장 분석을 하고 싶을 경우를 대비하여, 본 시스템에서는 명령행 프로그램인 kup(kup.exe)를 제공한다. 이 프로그램의 
소스 코드는 <TT class=wiki>/header_src/KupTest.cpp</TT>이며, 이 코드를 보면 <A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>의 C++ 인터페이스를 
어떻게 사용하는지를 가장 빨리 알 수 있다. 
<H3><A id=s-4.1 name=s-4.1></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">4.1</A> 
kup 프로그램 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-4.1">#</A></H3>kup는 
표준입력(stdin/cin)으로부터 한 줄씩 문장을 입력받아 그 분석 결과를 내어 준다. 아무 옵션 없이 실행시키면 다음과 같이 입력 대기 
상태에 들어가고, <PRE class=wiki>C:\kwak101\MyProgrammingLab\JunkRoom\KuParserDeploy\bin&gt;kup
_
</PRE>다음과 같이 예문을 입력하고 엔터를 누르면 <PRE class=wiki>김혜선이 비밀리에 결혼한 사실이 뒤늦게 알려졌다.
</PRE>그 문장에 대한 분석 결과가 출력된다.<A id=commandKup name=commandKup></A> <PRE class=wiki>; 김혜선이 비밀리에 결혼한 사실이 뒤늦게 알려졌다.
(VP      (NP_SBJ  (NP_MOD  (NP_SBJ 김혜선/NNP + 이/JKS )
                           (NP_MOD  (NP_AJT 비밀리/NNG + 에/JKB )
                                    (NP_MOD 결혼/NNG + 하/XSV + ㄴ/ETM )))
                  (NP_SBJ 사실/NNG + 이/JKS ))
         (VP      (VP 뒤늦/VA + 게/EC )
                  (VP 알려지/VV + 었/EP + 다/EF + ./SF )))
</PRE>이 프로그램은 파일끝기호(EOF)를 만날 때 종료되므로, Win32에서는 <TT class=wiki>ctrl-z</TT> 키를 누르고 
엔터를 누르든지, Unix에서는 <TT class=wiki>ctrl-d</TT>를 누르고 엔터를 누르면 된다. 
<BR><BR><B>옵션보기</B>: -h 옵션을 주면 이 프로그램의 추가 옵션들에 대해 알 수 있다. <PRE class=wiki>C:\kwak101\MyProgrammingLab\JunkRoom\KuParserDeploy\bin&gt;kup -h
Ku_parser: A PSG Korean Syntactic Analyzer
                (c) NLPLab.,Korea University, 2004
* Usage:kup [options]
        -r &lt;path&gt; : resource directory (default:./data)
        -v : verbose mode (default:false)
        -n : without lexical information (default:false)
        -t : html tree-graph output (default:false)
</PRE>각 옵션은 다음과 같다. 
<UL>
  <LI>-r &lt;경로&gt; 
  <UL>
    <LI>kup가 사용하는 자원 파일 디렉토리(<B>r</B>esource dir)를 지정한다. 
    <LI>기본값: kup와 같은 위치에 있는 ./data 
    <LI>예: <TT class=wiki>-r c:/ku_parser/data </TT>
    <LI>경로가 맞지 않거나 해당 디렉토리에 자원 파일들이 제대로 들어 있지 않으면 런타임 에러가 발생한다. </LI></UL>
  <LI>-v 
  <UL>
    <LI>동작과정표시(<B>v</B>erbose)모드를 활성화시킨다. 
    <LI>이 모드가 활성화될 경우, 다음의 정보가 출력된다. 
    <UL>
      <LI>동작 모드 표시 
      <LI>자원 적재 상태 표시 
      <LI>구문분석 시 품사 태깅 결과, 품사 변환 결과 표시 </LI></UL></LI></UL>
  <LI>-n 
  <UL>
    <LI>어휘정보를 사용하지 않는(<B>n</B>on-lexicalized) 모드를 활성화시킨다 
    <LI>구문분석 시스템의 자원적재 시간을 단축시키는 효과가 있음. 
    <UL>
      <LI>대단히 저사양의 컴퓨터에서 자원적재 시간이 크게 문제되는 경우만 사용한다<TT class=foot><A id=rfn2 
      name=rfn2><A 
      href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#fn2">[2]</A></TT>. 

      <LI>어휘정보를 사용하는 경우보다 정확도가 다소 떨어짐 </LI></UL></LI></UL>
  <LI>-t 
  <UL>
    <LI>HTML 출력 (h<B>t</B>ml output) 모드를 활성화시킨다. 
    <LI>구문분석 결과가 html 형식으로 출력됨. 
    <UL>
      <LI>웹데모(<A 
      href="http://cl.korea.ac.kr/~yjkwak">http://cl.korea.ac.kr/~yjkwak</A>)에서 
      보는 형식과 동일함. 출력결과를 별도의 파일에 재지향(redirect)한 후, 웹브라우저로 읽어들여서 확인하면 된다. <PRE class=wiki>   C:\kwak101\MyProgrammingLab\JunkRoom\KuParserDeploy\bin&gt;kup -t &lt;&lt; sample.txt &gt;&gt; sample_out.html
   </PRE></LI></UL></LI></UL></LI></UL>
<H2><A id=s-5 name=s-5></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">5</A> 
프로그램적으로 사용하기 <A id=sectFive name=sectFive></A><A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5">#</A></H2>본 
시스템은 <A href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>를 
프로그램적으로 사용하기 위한 인터페이스를 제공하고 있는데, 본 절에서는 이 인터페이스의 사용법에 대해 설명한다. 각 함수 매개변수에 대한 설명은 
<A href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#api">API 
레퍼런스</A>을 읽어 참고할 것. 
<H3><A id=s-5.1 name=s-5.1></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">5.1</A> 개요 
<A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.1">#</A></H3><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>에서는 네 개의 클래스를 
개방하고 있다. 
<OL type=1>
  <LI><B>Kup</B> 
  <UL>
    <LI><A href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>의 
    핵심모듈. 구문분석 기능을 가진 클래스. </LI></UL>
  <LI><B>Phrases</B> 
  <UL>
    <LI>이진 구구조 트리를 나타내는 클래스. 
    <LI>내부적으로, 한개의 트리 노드를 나타내는 aPhrase의 컨테이너로 구성되어 있다. </LI></UL>
  <LI><B><A class=nonexistent 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/KupTrOut">?</A>KupTrOut</B> 
  <UL>
    <LI>이진 구구조 트리의 출력 기능을 가진 클래스. Phrases를 받아 동작한다. </LI></UL>
  <LI><B><A class=nonexistent 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/KupError">?</A>KupError</B> 
  <UL>
    <LI><A href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>의 
    동작 중에 발생하는 에러 정보를 가진 클래스. </LI></UL></LI></OL>
<H3><A id=s-5.2 name=s-5.2></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">5.2</A> 준비 
<A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.2">#</A></H3>별다른 
준비는 필요없으며, 다음의 헤더 하나만 인클루드하면 된다. <PRE class=wiki>#include "Kup.h"
</PRE>
<H3><A id=s-5.3 name=s-5.3></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">5.3</A> 
구문분석기 객체 생성하기 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.3">#</A></H3>파싱을 
수행하기 위해서는 Kup 클래스 객체가 생성되어 있어야 한다. 생성 방법은 일반적인 C++ 클래스 객체를 생성하는 방법과 동일하다. <PRE class=wiki>  // 지역 객체로 생성하기
  Kup kup("./data", true, true);  // ./data를 자원디렉토리로 설정, verbose 모드 ON, lexical 모드 ON

  // 자유 저장공간(힙) 객체로 생성하기
  Kup * kup = new Kup("c:/rsc", false, true);  // c:/rsc를 자원디렉토리로 설정, verbose 모드 OFF, lexical 모드 ON
</PRE>
<UL>
  <LI>Kup 객체가 생성될 때 자원적재가 동시에 이루어지면서 파서의 초기화가 모두 완료된다. 
  <LI>파서 초기화에 문제가 생기면, <A class=nonexistent 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/KupError">?</A>KupError 타입의 예외가 
  발생된다. 에러 처리를 해 주고 싶을 경우엔 다음과 같이 try-catch 구조를 만들어 주면 된다. <PRE class=wiki>     /////////////////////////////
     //   Kup 객체 생성 예제 1  //
     /////////////////////////////
     try
     {
       // 파싱 관련 코드들...
       Kup kup("./data", true, true); 
     }
     catch (KupError &amp; ke)
     {
        // 에러 처리 관련 코드들...
     }

     /////////////////////////////
     //   Kup 객체 생성 예제 2  //
     /////////////////////////////
     try
     {
       // 파싱 관련 코드들...
       Kup * kup= new Kup("./data", true, true);
       //...
       // 동적 kup 객체 삭제
       delete kup; 
     }
     catch (KupError &amp; ke)
     {
        // 에러 처리 관련 코드들...(예외 발생 시, 동적 객체를 알아서 삭제하기 때문에 일일이 삭제할 필요가 없다)
     }
 </PRE></LI></UL>
<H3><A id=s-5.4 name=s-5.4></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">5.4</A> 
구문분석 수행하기 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.4">#</A></H3>Kup 
객체를 생성한 후에는 doKup 멤버 함수를 호출하면 문장을 파싱할 수 있다. 먼저, 이진 구구조 트리를 담는 Phrases 객체를 만들어 
둔다. <PRE class=wiki>  Phrases tree;
</PRE>다음, <TT class=wiki>Kup::doKup()</TT> 함수를 호출한다. 이 함수는 한국어 문장에 대한 const 
char* 포인터와 Phrases 객체의 참조자를 인자로 받으며, 파싱의 성패를 알리는 bool 타입 플래그를 반환한다. 함수 호출 후, 인자로 
넘긴 Phrases 객체엔 구문분석 결과가 담긴다. <PRE class=wiki>  bool b_t_succ_f_fail = kup.doKup("한국어 문장을 입력하세요", tree);
</PRE><TT class=wiki>doKup</TT> 함수가 false를 반환하는 경우는 다음에 속한다. 
<UL>
  <LI>입력 문장의 어절 개수가 64개를 초과하는 경우<TT class=foot><A id=rfn3 name=rfn3><A 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#fn3">[3]</A></TT>. 

  <LI>구문분석이 불가능한 토큰이 입력되었을 경우 </LI></UL>
<H3><A id=s-5.5 name=s-5.5></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">5.5</A> 
구문분석 결과 사용하기 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.5">#</A></H3>
<H4><A id=s-5.5.1 name=s-5.5.1></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">5.5.1</A> 
표준출력(stdout/cout)에 및 파일에 출력하기 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.5.1">#</A></H4>구문분석 
결과를 외부로 출력할 경우이다. <TT class=wiki>Kup::doKup()</TT> 함수의 반환값이 true일 때에는 평문텍스트 형식과 
HTML 형식으로 구문트리를 출력할 수 있는데, 여기에 <A class=nonexistent 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KupTrOut">?</A>KupTrOut 클래스 객체를 
사용하며, 구문분석결과를 담은 Phrases 객체를 이 객체와 묶어 사용한다. 우선 <A class=nonexistent 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KupTrOut">?</A>KupTrOut 클래스 객체를 
생성한다. <PRE class=wiki>  KupTrOut kto;
</PRE>그리고, 다음의 용도에 따라 별도의 함수를 호출한다. 
<OL type=1>
  <LI><B>평문 텍스트 형식으로 출력하기</B>: <TT class=wiki>KupTrOut::bracket()</TT> 함수를 사용한다. 
  첫째 매개변수는 FILE* 타입의 파일 포인터이고, 둘째 매개변수는 Phrases 타입 객체의 참조자이다. 출력 결과는 <A 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#commandKup">앞에 
  보인 구문분석 결과</A>와 같다. <PRE class=wiki>   kto.bracket(stdout, tree);  // 표준출력 콘솔에 내보낸다.tree에 구문분석 결과가 담긴 상태.
 </PRE>
  <LI><B>HTML 형식으로 출력하기</B>: <TT class=wiki>KupTrOut::htmlTreeGraph()</TT> 함수를 
  사용한다. 매개변수 설정은 앞의 경우와 같다. 출력 결과는 웹데모(<A 
  href="http://cl.korea.ac.kr/~yjkwak">http://cl.korea.ac.kr/~yjkwak</A>)에서 출력하는 
  결과이다<TT class=foot><A id=rfn4 name=rfn4><A 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#fn4">[4]</A></TT>. 
<PRE class=wiki>   kto.htmlTreeGraph(stderr, tree);  // 표준에러 콘솔에 내보낸다.tree에 구문분석 결과가 담긴 상태.
 </PRE></LI></OL>
<H4><A id=s-5.5.2 name=s-5.5.2></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">5.5.2</A> 
구문 트리 횡단하기 <A id=traverse name=traverse></A><A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.5.2">#</A></H4>구문분석 
결과를 프로그램 내에서 사용할 경우이다. Phrases 클래스의 주요정보는 다음과 같다. <PRE class=wiki>struct Phrases			
{
     aPhrase	*root;                // 루트 
     aPhrase	*one[MAX_PHS_CNT];	    // 삼각테이블
     Words        words;                // 형태소 분석 결과 
};
</PRE>
<UL>
  <LI>root : 구문분석 결과가 표현된 이진 구구조 트리의 최상위 노드(aPhrase 타입)의 포인터 
  <LI>one : 실제 트리 구성 노드들. 삼각테이블로 구성되어 있다. 
  <LI>words: 형태소 분석 결과가 들어간다. 단말 노드 정보를 뽑아 올 때 사용한다. 실제로 Words는 한 어절 정보인 aWord의 
  배열로 구성되어 있는 컨테이너로서, 구문분석 후에는 입력 문장의 어절 개수에 해당하는 aWord가 생긴다. words.one[n]은 n번째 
  어절의 정보이다. <PRE class=wiki>  typedef struct	_Words           // 한 문장에 대한 전체 어절 정보
  {	
    aWord     one[MAX_WRD_CNT];		
  } Words;

  typedef   struct   _aWord	         // 한 어절에 대한 정보 
  {		
     char     raw[MAX_WRD_LEN];     // 원어절 (김혜선이)
     char     pos[MAX_STR_LEN];     // 품사 태깅 결과 (김혜선/NP + 이/JS)
  } aWord;
 </PRE></LI></UL>트리를 구성하는 노드의 주요정보는 다음과 같다. <PRE class=wiki>typedef	struct	_aPhrase			
{	
     Lex       cont;              // 노드의 구문태그
     Lex       func;              // 노드의 기능태그 

     short     end_left;          // 왼쪽   어절 위치 번호
     short     end_right;         // 오른쪽 어절 위치 번호

     struct   _aPhrase* left;     // 왼쪽   자식노드 포인터
     struct   _aPhrase* right;    // 오른쪽 자식노드 포인터
} aPhrase;
</PRE>
<UL>
  <LI>cont : 노드의 구문태그(VP, NP,...)를 나타낸다. cont.syn 멤버(char[5])를 접근하면 얻을 수 있다. 
  <UL>
    <LI>구문태그 정보를 보려면 <A 
    href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#guMun">구문 
    노드 기호 명세</A>를 참고한다. </LI></UL>
  <LI>func : 구문태그에 보조적으로 부착되는 기능태그(_MOD, _AJT,...)를 나타낸다. func.syn 멤버(char[5])를 
  접근하면 얻을 수 있다. 
  <UL>
    <LI>기능태그 정보를 보려면 <A 
    href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#guMun">구문 
    노드 기호 명세</A>를 참고한다. </LI></UL>
  <LI>end_left : 구문트리의 서브트리가 지배하고 있는 단말노드의 최좌측 어절 위치 번호. 
  <LI>end_right : 구문트리의 서브트리가 지배하고 있는 단말노드의 최우측 어절 위치 번호 
  <LI>left : 왼쪽 자식노드 포인터.<B>트리 횡단에 사용한다.</B> 
  <LI>right : 오른쪽 자식노드 포인터. <B>트리 횡단에 사용한다.</B> </LI></UL>구문트리의 횡단방법은 root가 NULL이 
아닐 때와 NULL일 때로 나뉜다. 
<OL type=1>
  <LI>root가 NULL이 아닐 경우 
  <UL>
    <LI>Phrases의 root 멤버 접근을 시작으로, left 멤버 및 right 멤버를 사용하여 재귀적 트리횡단 
    기법(in-order/pre-order/post-order)을 적용한다. </LI></UL>
  <LI>root가 NULL일 경우 
  <UL>
    <LI>부분 파스가 생긴 경우이기 때문에, 정상적인 구문트리 횡단이 불가능하다. Phrases의 one 멤버를 직접 액세스하여 부분 파스 
    정보를 가져오면 된다. </LI></UL></LI></OL>
<H3><A id=s-5.6 name=s-5.6></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">5.6</A> 에러 
처리 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.6">#</A></H3><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>는 별다른 런타임에러 
처리가 필요없다. <TT class=wiki>Kup::Kup()</TT>의 호출 시 <A class=nonexistent 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KupError">?</A>KupError 예외가 발생되지 
않았다면, 그 이후에는 아무런 문제없이 쓸 수 있다. <BR><BR><B>Kup 객체를 동적으로 생성했을 경우에 알아 둘 점</B>: 예외가 
발생하면 자체적으로 메모리를 삭제하기 때문에 직접 삭제해줄 필요가 없다. 단, 예외가 발생하지 않았을 경우에는 일반적인 프로그래밍 규칙을 따라 
Kup 객체를 직접 삭제해 주어야 한다. <BR><BR><A class=nonexistent 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KupError">?</A>KupError 자체에도 별다른 
정보가 들어 있지 않고 단지 에러 메시지만 담고 있으므로, 메시지를 그대로 출력하거나 부분 문자열을 검색하여 다른 처리에 쓸 수 있다. 에러 
메시지를 출력하려면 <TT class=wiki>KupError::what()</TT> 함수를 사용하면 된다. 이 함수는 const char*를 
반환한다. <PRE class=wiki>    try
    {
      // ...
    }
    catch(KupError &amp; ke)
    {
       cout&lt;&lt;ke.what()&lt;&lt;endl; // 에러 메시지를 출력한다. 
    }
</PRE>
<H3><A id=s-5.7 name=s-5.7></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">5.7</A> 예제 
<A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-5.7">#</A></H3>다음은 
<A href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>의 각 모듈을 
사용하여 파싱을 수행한 예제이다. 예제 입력 문장으로는 "<I>김혜선이 극비리에 결혼한 사실이 뒤늦게 알려졌다</I>"을 사용하였다. <PRE class=wiki>#include "Kup.h"
#include&lt;iostream&gt;
#include&lt;string&gt;
using std::cin;
using std::cerr;

int main(int argc, char** argv)
{
     bool b_t_verb_f_nvb=false;   // verbose 모드 플래그
     bool b_t_lex_f_nlex=true;    // lexical 모드 플래그
     bool b_t_html_f_none=false;  // html 모드 플래그
     string resource_dir="./data"; // 자원 디렉토리
     try
     {
          Kup kup(resource_dir.c_str(),b_t_verb_f_nvb,b_t_lex_f_nlex);
          Phrases tree;
	 bool b_t_succ_f_fail=kup.doKup("김혜선이 비밀리에 결혼한 사실이 뒤늦게 알려졌다.", tree); 
         	 KupTrOut kto;
          if(b_t_succ_f_fail)
          {
              if(b_t_html_f_none)
	         kto.htmlTreeGraph(stderr, tree);
	     else
	         kto.bracket(stderr, tree);
          }
     }
     catch(KupError &amp; ke)
     {
         cerr&lt;&lt;"- (&lt;rcved by&gt;"&lt;&lt;__FILE__&lt;&lt;"): "&lt;&lt;ke.what()&lt;&lt;endl;
         cerr&lt;&lt;typeid(ke).name()&lt;&lt;endl;
     }
  
     return 0;
}
</PRE>
<H2><A id=s-6 name=s-6></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">6</A> <A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A> 언어학적 자료 <A 
class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-6">#</A></H2>
<H3><A id=s-6.1 name=s-6.1></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">6.1</A> 
이진트리란? <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-6.1">#</A></H3>
<H3><A id=s-6.2 name=s-6.2></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">6.2</A> 파싱 
모델에 대해서 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-6.2">#</A></H3>
<H3><A id=s-6.3 name=s-6.3></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">6.3</A> 구문 
노드 기호 명세<A id=guMun name=guMun></A> <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-6.3">#</A></H3>
<H3><A id=s-6.4 name=s-6.4></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">6.4</A> 
품사집합 명세 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-6.4">#</A></H3>
<H2><A id=s-7 name=s-7></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">7</A> API 
레퍼런스 <A id=api name=api></A><A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7">#</A></H2>본 
절에서는 <A href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>를 
프로그래밍적으로 사용할 때 참고할 수 있는 C++ API 설명을 제공한다. 자세한 프로그래밍 요령 및 예제는 <A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#sectFive">5절</A>에서 
참고하기 바란다. 
<H3><A id=s-7.1 name=s-7.1></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">7.1</A> 
ku_parser 네임스페이스 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7.1">#</A></H3>#include 
"Kup.h" <BR><BR>개방하고 있는 클래스 목록: 
<UL>
  <LI>class <B>Kup</B> <BR>
  <DIV class=indent>이 클래스는 구문분석기 핵심모듈 기능을 구현한다. </DIV>
  <LI>class <B><A class=nonexistent 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/KupTrOut">?</A>KupTrOut</B> <BR>
  <DIV class=indent>이 클래스는 구문분석 결과의 출력 기능을 구현한다. </DIV>
  <LI>class <B><A class=nonexistent 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/KupError">?</A>KupError</B> <BR>
  <DIV class=indent>이 클래스는 구문분석기 동작에 문제가 생겼을 때에 발생하는 예외(exception) 객체를 구현한다. 
  </DIV></LI></UL>
<H4><A id=s-7.1.1 name=s-7.1.1></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">7.1.1</A> 
ku_parser::Kup 클래스 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7.1.1">#</A></H4>
<OL type=1>
  <LI><B>생성자 및 소멸자</B> 
  <OL type=1>
    <LI>Kup(const char * <I>resourceRoot</I>=NULL,bool <I>b_verbose</I>=false, 
    bool <I>b_parseWithLx</I>=false) throw (<A class=nonexistent 
    href="http://www.kwak101.pe.kr/wiki/wiki.php/KupError">?</A>KupError) 
    <UL>
      <LI>매개변수: 
      <UL>
        <LI><I>resourceRoot</I> <A 
        href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A> 
        구문분석시스템에 필요한 자원 파일을 담고 있는 디렉토리 경로. 
        <LI><I>b_verbose</I> 동작과정출력 여부의 ON/OFF를 지정. 기본인자=false 
        <LI><I>b_parseWithLx</I> 어휘사용 여부의 ON/OFF를 지정. 기본인자=false 
    </LI></UL></LI></UL></LI></OL>
  <LI><B>멤버 함수</B> 
  <OL type=1>
    <LI>bool doKup(const char * <I>sent</I>, Phrases &amp; <I>tree</I>,<A 
    class=nonexistent 
    href="http://www.kwak101.pe.kr/wiki/wiki.php/TaggingMethod">?</A>TaggingMethod 
    <I>posTagMethd</I>=PATH_BASED_TAGGING) 
    <UL>
      <LI>역할<BR>
      <DIV class=indent>입력 문장에 대한 구문분석을 수행하여, 이진구구조 트리를 생성한다. </DIV>
      <LI>반환: bool<BR>
      <DIV class=indent>구문분석의 성공 및 실패를 알린다. </DIV>
      <LI>매개변수: 
      <UL>
        <LI><I>sent</I> 한국어 입력 문장. 문장 끝은 마침기호(예: ., ?, !)로 끝나야 완전 파스가 만들어진다. 
        <LI><I>tree</I> 구문분석 결과가 담길 이진구구조 트리. 
        <LI><I>posTagMethod</I> 입력 문장의 형태소에 적용하는 품사 부착(POS tagging) 동작의 방식을 
        설정한다. PATH_BASED_TAGGING 및 STATE_BASED_TAGGING 중 하나를 지정할 수 있다. 기본인자= 
        PATH_BASED_TAGGING </LI></UL></LI></UL></LI></OL></LI></OL>
<H4><A id=s-7.1.2 name=s-7.1.2></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">7.1.2</A> 
ku_parser::<A class=nonexistent 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KupTrOut">?</A>KupTrOut 클래스 <A 
class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7.1.2">#</A></H4>
<OL type=1>
  <LI><B>생성자 및 소멸자</B> 
  <OL type=1>
    <LI>생성자는 기본 생성자만 제공됨 </LI></OL>
  <LI><B>멤버 함수</B> 
  <OL type=1>
    <LI>void bracket(FILE* <I>p_stream</I>, Phrases &amp; <I>tree</I>) 
    <UL>
      <LI>역할<BR>
      <DIV class=indent>구문분석 결과를 텍스트 브래킷 형식으로 출력한다. </DIV>
      <LI>반환: void 
      <LI>매개변수: 
      <UL>
        <LI><I>p_stream</I> 출력이 수행될 파일의 포인터. 
        <LI><I>tree</I> 구문분석결과가 담긴 이진구구조트리. </LI></UL></LI></UL>
    <LI>void htmlTreeGraph(FILE* <I>p_stream</I>, Phrases &amp; <I>tree</I>) 
    <UL>
      <LI>역할<BR>
      <DIV class=indent>구문분석 결과를 텍스트 HTML 테이블 형식으로 출력한다. </DIV>
      <LI>반환: void 
      <LI>매개변수: 
      <UL>
        <LI><I>p_stream</I> 출력이 수행될 파일의 포인터. 
        <LI><I>tree</I> 구문분석결과가 담긴 이진구구조트리. </LI></UL></LI></UL></LI></OL></LI></OL>
<H4><A id=s-7.1.3 name=s-7.1.3></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">7.1.3</A> 
ku_parser::<A class=nonexistent 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KupError">?</A>KupError 클래스 <A 
class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7.1.3">#</A></H4>
<OL type=1>
  <LI><B>생성자 및 소멸자</B> 
  <DIV class=indent>1.KupError:<A class=nonexistent 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/:KupError">?</A>:KupError(const 
  char * msg) 
  <UL>
    <LI>매개변수: 
    <UL>
      <LI><I>msg</I> 에러를 알리는 메시지 </LI></UL></LI></UL></DIV>
  <LI><B>멤버 함수</B> 
  <UL>
    <LI>std::runtime_error 클래스의 함수를 그대로 사용할 수 있다(표준 C++ 참고자료를 볼 것) </LI></UL>
  <LI><B>참고사항</B><BR>
  <DIV class=indent>본 클래스는 <A 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>의 자원 적재 에러를 
  알려주는 용도로 사용되었기 때문에, 특별히 직접 사용할 이유는 없다. 에러 발생 시 전송되는 <A class=nonexistent 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/KupError">?</A>KupError에는 기본적으로 
  다음과 같은 메시지가 출력된다. "<A 
  href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#troubleShoot">문제발생 
  시의 점검사항</A>" 절을 참고하기 바란다. 
  <UL>
    <LI><TT class=wiki>[ERR] KomaWrap::KomaWrap(): Cannot loading 
    KomaEngine</TT> : 형태소분석기 엔진의 자원 적재에 실패했다. 
    <LI><TT class=wiki>[ERR] KomaWrap::KomaWrap(): Cannot loading 
    HantagEngine.</TT> : 품사 부착기 엔진의 자원 적재에 실패했다. 
    <LI><TT class=wiki>[ERR] KomaWrap::KomaWrap(): Cannot Create 
    HantagInstance.</TT> : 품사 부착기의 초기화에 실패했다. 
    <LI><TT class=wiki>[ERR] Kup::Kup() : Parser Resource Setting Error.</TT> : 
    구문분석기의 자원 적재에 실패했다. </LI></UL></DIV></LI></OL>
<H3><A id=s-7.2 name=s-7.2></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">7.2</A> 전역 
네임스페이스 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-7.2">#</A></H3>#include 
"Kup.h" <BR><BR>개방하고 있는 클래스 목록 
<UL>
  <LI>struct <B>Phrases</B><BR>
  <DIV class=indent>이 구조체는 이진구문트리 자료구조를 나타낸다. </DIV>
  <LI>struct <B>aPhrase</B><BR>
  <DIV class=indent>이 구조체는 이진구문트리를 구성하는 노드 하나를 나타낸다. </DIV>
  <LI>struct <B>Words</B><BR>
  <DIV class=indent>이 구조체는 입력 문장 전체의 정보를 나타낸다. </DIV>
  <LI>struct <B>word</B><BR>
  <DIV class=indent>이 구조체는 입력 문장을 구성하는 한 어절을 나타낸다. </DIV></LI></UL>자세한 자료구조는 <A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#traverse">5.5.2절</A>을 
보고 참고한다. 
<H2><A id=s-8 name=s-8></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">8</A> 문제발생 
시의 점검사항 <A id=troubleShoot name=troubleShoot></A><A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-8">#</A></H2>
<H3><A id=s-8.1 name=s-8.1></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">8.1</A> 자원 
파일에 대하여 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-8.1">#</A></H3><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>는 다음의 자원 파일을 
사용하고 있다. 
<OL type=1>
  <LI><B>형태소분석기/품사부착기용 자원 파일</B> 
  <UL>
    <LI>connection.txt 
    <LI>main.dat 
    <LI>main.FST 
    <LI>prob.dat 
    <LI>prob.FST 
    <LI>tag.nam 
    <LI>tagout.nam </LI></UL>
  <LI><B>구문분석기용 자원 파일</B> 
  <UL>
    <LI>parser_lexicon_LX.txt 
    <LI>parser_lexicon_NLX.txt 
    <LI>parser_poscvt.txt 
    <LI>parser_rule_LX.txt 
    <LI>parser_rule_NLX.txt </LI></UL></LI></OL><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">KuParser</A>를 사용하면서 발생할 수 
있는 문제는 대부분 자원 적재의 실패에서 온다. 다음의 사항을 체크해 본다. 
<OL type=1>
  <LI><B>자원 파일 디렉토리를 제대로 설정했는가?</B><BR>
  <DIV class=indent>존재하지 않는 디렉토리 경로를 지정하면 안 된다. </DIV>
  <LI><B>자원 파일 디렉토리에 자원 파일들이 제대로 들어 있는가?</B><BR>
  <DIV class=indent>위의 목록에 있는 자원 파일들이 누락되지 않았는지 확인한다. </DIV>
  <LI><B>자원 파일의 DOS/UNIX 형식이 맞지 않는가?</B><BR>
  <DIV class=indent>구문분석기용 자원 파일은 텍스트 형식으로 되어 있다.Win32 환경에서는 DOS 형식의 자원 파일을 사용해야 
  하며 Unix 환경에서는 Unix 형식의 자원파일을 사용해야 한다. 이것이 맞지 않을 경우에는 런타임 에러가 발생할 수 있다. 
  </DIV></LI></OL>
<H2><A id=s-9 name=s-9></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">9</A> 힘써주신 
분들<TT class=foot><A id=rfn5 name=rfn5><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#fn5">[5]</A></TT> 
<A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-9">#</A></H2>
<DIV class=indent>
<TABLE class=wiki cellSpacing=2 cellPadding=3>
  <TBODY>
  <TR class=wiki>
    <TD class=wiki><B>이름</B></TD>
    <TD class=wiki><B>작업</B> </TD>
    <TD class=wiki><B>연차</B> </TD>
    <TD class=wiki><B>연락처</B></TD></TR>
  <TR class=wiki>
    <TD class=wiki>곽용재 </TD>
    <TD class=wiki>파싱모델 고안, 시스템 디자인 및 통합, 튜닝 </TD>
    <TD class=wiki>박사졸업 </TD>
    <TD class=wiki>kwak101@nhncorp.com, kwak101@hitel.net</TD></TR>
  <TR class=wiki>
    <TD class=wiki>김혜겸 </TD>
    <TD class=wiki>모듈 관리, 웹데모 디자인 </TD>
    <TD class=wiki>석사1년차 </TD>
    <TD class=wiki>hkkim@nlp.korea.ac.kr</TD></TR>
  <TR class=wiki>
    <TD class=wiki>박소영 </TD>
    <TD class=wiki>파싱모델 고안, 파서 핵심부 구현</TD>
    <TD class=wiki>박사5년차</TD>
    <TD class=wiki>ssoya@nlp.korea.ac.kr</TD></TR></TBODY></TABLE></DIV>
<H2><A id=s-10 name=s-10></A><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#toc">10</A> 
참고문헌 <A class=purple 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#s-10">#</A></H2>
<UL>
  <LI>소영이 논문 
  <LI>용재 논문 </LI></UL><BR><TT class=wiki>----</TT><BR><TT 
class=foot>&nbsp;&nbsp;&nbsp;<A id=fn1 name=fn1><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#rfn1">[1]</A>&nbsp;</TT> 
C 인터페이스는 차후에 제공할 예정<BR><TT class=foot>&nbsp;&nbsp;&nbsp;<A id=fn2 name=fn2><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#rfn2">[2]</A>&nbsp;</TT> 
Pentium 533Mhz/128MB 시스템에서 테스트했을 때에도 약 1~2초 밖에 걸리지 않았음<BR><TT 
class=foot>&nbsp;&nbsp;&nbsp;<A id=fn3 name=fn3><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#rfn3">[3]</A>&nbsp;</TT> 
길이제한 에러는 차후에 수정할 예정<BR><TT class=foot>&nbsp;&nbsp;&nbsp;<A id=fn4 name=fn4><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#rfn4">[4]</A>&nbsp;</TT> 
부분파스만 만들어졌을 경우에는 HTML 출력이 약식으로만 이루어진다. 이 부분에 대한 수정은 추후에 이루어질 예정.<BR><TT 
class=foot>&nbsp;&nbsp;&nbsp;<A id=fn5 name=fn5><A 
href="http://www.kwak101.pe.kr/wiki/wiki.php/TechnicalNoteForKup#rfn5">[5]</A>&nbsp;</TT> 
가나다순<BR>
<HR class=wiki>
<A href="http://www.kwak101.pe.kr/wiki/wiki.php/KuParser">분류고려대파서</A> 
</DIV></DIV></DIV>
<HR class=wikiHr>

</BODY></HTML>
